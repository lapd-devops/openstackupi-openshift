---
# file: roles/openshift/tasks/main.yml
- name: Create static port allocations
  os_port:
     state: present
     cloud: "{{ os_project }}"
     name: "{{ inventory_hostname }}"
     network: "{{ network_name }}"
     fixed_ips:
       - ip_address: "{{ hostvars[inventory_hostname]['fixed_ip'] }}"
- name: Create OpenShift instances
  os_server:
     state: present
     cloud: "{{ os_project }}"
     name: "{{ inventory_hostname }}"
     image: "{{ hostvars[inventory_hostname]['image'] }}"
     key_name: "{{ ospuser }}"
     flavor: "{{ hostvars[inventory_hostname]['flavor'] }}"
     wait: yes
     nics:
       - port-name: "{{ inventory_hostname }}"
     auto_ip: no
     userdata: "{{ lookup('file', hostvars[inventory_hostname]['ignfile']) | string }}"
- name: Assign floating IP
  os_floating_ip:
     state: present
     cloud: "{{ os_project }}"
     server: "{{ inventory_hostname }}"
     reuse: no
     network: public
     fixed_address: "{{ hostvars[inventory_hostname]['fixed_ip'] }}"
     floating_ip_address: "{{ hostvars[inventory_hostname]['floating_ip'] }}"
     wait: true
     timeout: 180
  register: floater
  when: hostvars[inventory_hostname]['floating_ip'] is defined
- name: Wait for bootstrap to complete
  run_once: true
  shell: "{{ playbook_dir }}/../openshift-install --dir=installer wait-for bootstrap-complete"
  args:
     chdir: "{{ playbook_dir }}/../"
  register: bootstrap
  until: bootstrap.rc == 0
  retries: 1
  delay: 1
  ignore_errors: true
- name: Delete the bootstrap instance
  run_once: true
  os_server:
     state: absent
     cloud: "{{ os_project }}"
     name: bootstrap
     delete_fip: yes
- name: Delete the bootstrap port
  run_once: true
  os_port:
     state: absent
     cloud: "{{ os_project }}"
     name: bootstrap
- name: Patch the image-registry to use emptyDir
  run_once: true
  shell: "oc patch configs.imageregistry.operator.openshift.io cluster --type merge --patch '{"spec":{"storage":{"emptyDir":{}}}}'"
  args:
     chdir: "{{ playbook_dir }}"
  register: patch
  until: patch.rc == 0
  retries: 60
  delay: 10
  ignore_errors: true
- name: Wait for install to complete
  run_once: true
  shell: "{{ playbook_dir }}/../openshift-install --dir=installer wait-for install-complete"
  args:
     chdir: "{{ playbook_dir }}/../"
  register: install
  until: install.rc == 0
  retries: 1
  delay: 1
  ignore_errors: true
- name: Print install-complete
  run_once: true
  debug:
     var: install.stderr_lines
